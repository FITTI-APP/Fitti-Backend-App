name: deploy
on:
  push:
    branches: [ develop ] # develop에 push될 때 CD가 일어나도록 핸들링

jobs:
  deploy_to_eb:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    if: "!contains(github.event.head_commit.message, '[skip deploy]')"
    name: deploy # deploy job 이름
    runs-on: ubuntu-latest

    env:
      CI: 1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # github secrets로 등록한 값 사용
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # github secrets로 등록한 값 사용
      AWS_DEFAULT_REGION: ap-northeast-2
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew bootJar
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss # 다른 포맷으로 변경 가능(MomentJS format syntax)
          utcOffset: "+09:00" # 한국 시간에 맞추기 위함

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          find build/libs/ -name "fitty-backend-app-*.jar" ! -name "*-plain.jar" | head -n 1 | xargs -I {} cp {} deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r elasticbeanstalk/.ebextensions deploy/.ebextensions
          cp -r elasticbeanstalk/.platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: fitty-api-server
          environment_name: fitty-develop-api
          version_label: Github Action-${{steps.current-time.outputs.formattedTime}} # 배포 버전은 타임스탬프를 이용하여 구분
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 300
